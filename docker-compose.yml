services:
  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - postgres
    # command: /app/compose/run-backend.sh
    networks:
      - app-network

  frontend:
    restart: unless-stopped
    # image: nginx:latest
    container_name: frontend
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./backend/media:/usr/share/nginx/html/media
      - ./nginx-config:/etc/nginx/conf.d
    networks:
      - app-network

  postgres:
    restart: unless-stopped
    image: "postgres:latest"
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: CFfRdzBewPEGG
    networks:
      - app-network

  redis:
    restart: unless-stopped
    image: "redis:latest"
    container_name: redis
    networks:
      - app-network

  rqworker:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rq_worker
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=videoflix.settings
    command: /app/compose/run_rq.sh
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
